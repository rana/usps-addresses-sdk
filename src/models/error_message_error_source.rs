/*
 * Addresses
 *
 * The Addresses API validates and corrects address information, eliminating errors, improving package delivery service and package pricing. This suite of APIs provides different utilities for addressing components. The ZIP Code&#8482; lookup finds valid ZIP Code&#8482; for a City and State.  The City/State lookup provides the valid cities and states for a provided ZIP Code&#8482;.  The Address Standardization API validates and standardizes USPS&#174; domestic addresses, city and state names, and ZIP Code&#8482; in accordance with USPS&#174; addressing standards.  The USPS&#174; address standard includes the ZIP + 4&#174;, signifying a USPS&#174; delivery point, given a street address, a city and a state. 
 *
 * The version of the OpenAPI document: 3.0.2
 * Contact: APISupport@usps.gov
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ErrorMessageErrorSource : The element that is suspected of originating the error.  Helps to pinpoint the problem.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ErrorMessageErrorSource {
    /// The input in the request which caused an error.
    #[serde(rename = "parameter", skip_serializing_if = "Option::is_none")]
    pub parameter: Option<String>,
    /// An example of a valid value for the input parameter.
    #[serde(rename = "example", skip_serializing_if = "Option::is_none")]
    pub example: Option<String>,
}

impl ErrorMessageErrorSource {
    /// The element that is suspected of originating the error.  Helps to pinpoint the problem.
    pub fn new() -> ErrorMessageErrorSource {
        ErrorMessageErrorSource {
            parameter: None,
            example: None,
        }
    }
}

